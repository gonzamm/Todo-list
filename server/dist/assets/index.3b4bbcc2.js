import{j as T,r as h,R as S,T as N,a as x,b as j}from"./vendor.25df24c4.js";const k=function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))u(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&u(c)}).observe(document,{childList:!0,subtree:!0});function r(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerpolicy&&(o.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?o.credentials="include":t.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function u(t){if(t.ep)return;t.ep=!0;const o=r(t);fetch(t.href,o)}};k();const e=T.exports.jsx,f=T.exports.jsxs,g=T.exports.Fragment;function C(i){const[s,r]=h.exports.useState(i.edit?i.edit.value:""),u=o=>{r(o.target.value)},t=o=>{o.preventDefault(),i.onSubmit({description:s}),r("")};return e("form",{onSubmit:t,className:"todo-form",children:i.edit?f(g,{children:[e("input",{placeholder:"Update your item",value:s,onChange:u,name:"description",className:"todo-input edit"}),e("button",{onClick:t,className:"todo-button edit",children:"Update"})]}):f(g,{children:[e("input",{placeholder:"Add a todo",value:s,onChange:u,name:"description",className:"todo-input"}),e("button",{onClick:t,className:"todo-button",children:"Add todo"})]})})}const E=({todos:i,completeTodo:s,removeTodo:r,updateTodo:u})=>{const[t,o]=h.exports.useState({id:null,value:""}),c=l=>{u(t.id,l),o({id:null,value:""})};return t.id?e(C,{edit:t,onSubmit:c}):i.map((l,y)=>f("div",{className:l.state?"todo-row complete":"todo-row",children:[e("div",{onClick:()=>s(l.id),children:l.description},l.id),f("div",{className:"icons",children:[e(S,{onClick:()=>r(l.id),className:"delete-icon"}),e(N,{onClick:()=>o({id:l.id,value:l.description}),className:"edit-icon"})]})]},y))},w=({category:i,setCategory:s,setChargin:r})=>{const[u,t]=h.exports.useState([]),[o,c]=h.exports.useState(!0),[l,y]=h.exports.useState(""),v=async()=>{const m=await(await fetch("http://localhost:8080/categorys")).json();t(m)};h.exports.useEffect(()=>{v()},[]);const b=async n=>{if(n.preventDefault(),r(!0),!l){alert("Invalid Category"),c(!0);return}await fetch("http://localhost:8080/categorys",{method:"POST",body:JSON.stringify({tittle:l}),headers:{"Content-Type":"application/json"}}),v(),y(""),c(!0),r(!1)},a=n=>{y(n.target.value)},p=async n=>{if(n.preventDefault(),!confirm("Sure?"))return;r(!0);const m=`http://localhost:8080/categorys/${i}`;await fetch(m,{method:"DELETE",headers:{"Content-Type":"application/json"}}),v(),s("1"),r(!1)};return e("div",{children:o?f(g,{children:[e("select",{name:"category",className:"category-select",defaultValue:i,onChange:n=>{s(n.target.value)},children:u.map(n=>e("option",{value:n.id,children:n.tittle},n.id))}),e("button",{onClick:()=>{c(!1)},className:"todo-button edit",children:"New"}),e("button",{onClick:p,className:"todo-button delete",children:"Delete"})]}):e(g,{children:f("form",{onSubmit:b,children:[e("input",{placeholder:"Create new Category",value:l,onChange:a,name:"category",className:"todo-input edit"}),e("button",{onClick:b,className:"todo-button edit",children:"Add Category"})]})})})};const O=()=>f("div",{className:"spinner",children:[e("div",{className:"double-bounce1"}),e("div",{className:"double-bounce2"})]});function L(){const[i,s]=h.exports.useState([]),[r,u]=h.exports.useState("1"),[t,o]=h.exports.useState(!1),c=async()=>{const a=`http://localhost:8080/categorys/${r}`,d=(await(await fetch(a)).json()).tasks;s(d)};return h.exports.useEffect(()=>{c()},[]),h.exports.useEffect(()=>{c()},[r]),f(g,{children:[e("h1",{children:"What's the Plan for Today?"}),e(w,{category:r,setCategory:u,setChargin:o}),e(C,{onSubmit:async a=>{if(!a.description)return;o(!0);const{description:p}=a,n=`http://localhost:8080/tasks/${r}`;await fetch(n,{method:"POST",body:JSON.stringify({description:p}),headers:{"Content-Type":"application/json"}}),c(),o(!1)}}),e(E,{todos:i,completeTodo:async a=>{let p=i.map(d=>(d.id===a&&(d.state=!d.state),d));s(p);const n=`http://localhost:8080/tasks/state/${a}`;fetch(n,{method:"PUT",headers:{"Content-Type":"application/json"}})},removeTodo:async a=>{if(!confirm("Sure?"))return;const n=[...i].filter(m=>m.id!==a);s(n);const d=`http://localhost:8080/tasks/${a}`;await fetch(d,{method:"DELETE",headers:{"Content-Type":"application/json"}})},updateTodo:async(a,p)=>{if(!p.description)return;s(d=>d.map(m=>m.id===a?p:m));const n=`http://localhost:8080/tasks/${a}`;await fetch(n,{method:"PUT",body:JSON.stringify({description:p.description}),headers:{"Content-Type":"application/json"}}),c()}}),t?e(O,{}):""]})}function R(){return e("div",{className:"todo-app",children:e(L,{})})}x.render(e(j.StrictMode,{children:e(R,{})}),document.getElementById("root"));
